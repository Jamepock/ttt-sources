/*
 Mediator - PureMVC
 */
package $(Package) $(CSLB){
    import org.puremvc.as3.interfaces.*;
    import org.puremvc.as3.patterns.mediator.Mediator;
    
    /**
     * A Mediator
	 * @author	$(DefaultUser)
     */
    public class $(FileName) extends Mediator implements IMediator $(CSLB){
        // Cannonical name of the Mediator
        public static const NAME: String = "$(FileName)";
		
        public function $(FileName)(viewComponent: Object) $(CSLB){
            // pass the viewComponent to the superclass where 
            // it will be stored in the inherited viewComponent property
            super(NAME, viewComponent);
        }
        
        /**
         * List all notifications this Mediator is interested in.
         * <P>
         * Automatically called by the framework when the mediator
         * is registered with the view.</P>
         * 
         * @return Array the list of Nofitication names
         */
        override public function listNotificationInterests(): Array $(CSLB){
            return [$(EntryPoint)];
        }

        /**
         * Handle all notifications this Mediator is interested in.
         * <P>
         * Called by the framework when a notification is sent that
         * this mediator expressed an interest in when registered
         * (see <code>listNotificationInterests</code>.</P>
         * 
         * @param INotification a notification 
         */
        override public function handleNotification(note: INotification): void $(CSLB){
            switch (note.getName()) $(CSLB){           
				default:
					break;		
            }
        }

    }
}
